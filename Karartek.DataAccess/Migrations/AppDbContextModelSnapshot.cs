// <auto-generated />
using System;
using Karartek.DataAccess.Concrete.EntityFramework.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Karartek.DataAccess.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Karartek.Entities.Concrete.City_District", b =>
                {
                    b.Property<int>("Il_Ilce_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Il_Ilce_Id"));

                    b.Property<int>("Il_Id")
                        .HasColumnType("int");

                    b.Property<string>("Il_Ilce_Adi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Il_Ilce_Turu_Id")
                        .HasColumnType("int");

                    b.Property<int>("Plaka_Kodu")
                        .HasColumnType("int");

                    b.HasKey("Il_Ilce_Id");

                    b.ToTable("City_District", (string)null);
                });

            modelBuilder.Entity("Karartek.Entities.Concrete.Judgment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CommisionName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Court")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Decision")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Decree")
                        .IsRequired()
                        .HasMaxLength(9999999)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DecreeNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DecreeType")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("DecreeYear")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int>("JudgmentTypeId")
                        .HasColumnType("int");

                    b.Property<int>("Likes")
                        .HasColumnType("int");

                    b.Property<string>("MeritsNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MeritsYear")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("JudgmentTypeId");

                    b.ToTable("Judgments", (string)null);
                });

            modelBuilder.Entity("Karartek.Entities.Concrete.JudgmentPool", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int>("JudgmentId")
                        .HasColumnType("int");

                    b.Property<int>("LawyerJudgmentId")
                        .HasColumnType("int");

                    b.Property<int>("SearchTypeId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("JudgmentId");

                    b.HasIndex("LawyerJudgmentId");

                    b.HasIndex("SearchTypeId");

                    b.HasIndex("UserId");

                    b.ToTable("JudgmentPool", (string)null);
                });

            modelBuilder.Entity("Karartek.Entities.Concrete.JudgmentType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("JudgmentTypes", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateDate = new DateTime(2022, 11, 23, 17, 2, 37, 747, DateTimeKind.Local).AddTicks(5160),
                            IsDeleted = false,
                            TypeId = 1,
                            TypeName = "Yargıtay"
                        },
                        new
                        {
                            Id = 2,
                            CreateDate = new DateTime(2022, 11, 23, 17, 2, 37, 747, DateTimeKind.Local).AddTicks(5190),
                            IsDeleted = false,
                            TypeId = 2,
                            TypeName = "Danıştay"
                        },
                        new
                        {
                            Id = 3,
                            CreateDate = new DateTime(2022, 11, 23, 17, 2, 37, 747, DateTimeKind.Local).AddTicks(5200),
                            IsDeleted = false,
                            TypeId = 3,
                            TypeName = "Anayasa Mahkemesi"
                        });
                });

            modelBuilder.Entity("Karartek.Entities.Concrete.Lawyer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("BarRegisterNo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.HasKey("Id");

                    b.ToTable("Lawyers", (string)null);
                });

            modelBuilder.Entity("Karartek.Entities.Concrete.LawyerJudgment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CommisionName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Court")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Decision")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Decree")
                        .IsRequired()
                        .HasMaxLength(9999999)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DecreeNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DecreeType")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("DecreeYear")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("LawyerAssessment")
                        .IsRequired()
                        .HasMaxLength(9999999)
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Likes")
                        .HasColumnType("int");

                    b.Property<string>("MeritsNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MeritsYear")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StateId")
                        .HasColumnType("int");

                    b.Property<string>("TBBComments")
                        .IsRequired()
                        .HasMaxLength(99999)
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StateId");

                    b.HasIndex("UserId");

                    b.ToTable("LawyerJudgments", (string)null);
                });

            modelBuilder.Entity("Karartek.Entities.Concrete.LawyerJudgmentState", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int>("StateId")
                        .HasColumnType("int");

                    b.Property<string>("StateName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LawyerJudgmentState", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateDate = new DateTime(2022, 11, 23, 17, 2, 37, 734, DateTimeKind.Local).AddTicks(9510),
                            IsDeleted = false,
                            StateId = 1,
                            StateName = "Onaya Gönderildi"
                        },
                        new
                        {
                            Id = 2,
                            CreateDate = new DateTime(2022, 11, 23, 17, 2, 37, 743, DateTimeKind.Local).AddTicks(8470),
                            IsDeleted = false,
                            StateId = 2,
                            StateName = "Onay Bekliyor"
                        },
                        new
                        {
                            Id = 3,
                            CreateDate = new DateTime(2022, 11, 23, 17, 2, 37, 743, DateTimeKind.Local).AddTicks(8490),
                            IsDeleted = false,
                            StateId = 3,
                            StateName = "Reddedildi"
                        },
                        new
                        {
                            Id = 4,
                            CreateDate = new DateTime(2022, 11, 23, 17, 2, 37, 743, DateTimeKind.Local).AddTicks(8490),
                            IsDeleted = false,
                            StateId = 4,
                            StateName = "Onaylandı"
                        });
                });

            modelBuilder.Entity("Karartek.Entities.Concrete.SearchType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SearchTypes", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateDate = new DateTime(2022, 11, 23, 17, 2, 37, 746, DateTimeKind.Local).AddTicks(7610),
                            IsDeleted = false,
                            TypeId = 1,
                            TypeName = "Avukatın Eklediği Kararlar"
                        },
                        new
                        {
                            Id = 2,
                            CreateDate = new DateTime(2022, 11, 23, 17, 2, 37, 746, DateTimeKind.Local).AddTicks(7650),
                            IsDeleted = false,
                            TypeId = 2,
                            TypeName = "Yüksek Yargı Kararları"
                        });
                });

            modelBuilder.Entity("Karartek.Entities.Concrete.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Faculty")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Grade")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("StudentNumber")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("University")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Students", (string)null);
                });

            modelBuilder.Entity("Karartek.Entities.Concrete.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("City")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("District")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("IdentityNumber")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("City");

                    b.HasIndex("UserTypeId");

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("Karartek.Entities.Concrete.UserType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UserTypes", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateDate = new DateTime(2022, 11, 23, 17, 2, 37, 745, DateTimeKind.Local).AddTicks(9120),
                            IsDeleted = false,
                            TypeId = 1,
                            TypeName = "Avukat-Avukat Stajyeri"
                        },
                        new
                        {
                            Id = 2,
                            CreateDate = new DateTime(2022, 11, 23, 17, 2, 37, 745, DateTimeKind.Local).AddTicks(9160),
                            IsDeleted = false,
                            TypeId = 2,
                            TypeName = "Öğrenci"
                        },
                        new
                        {
                            Id = 3,
                            CreateDate = new DateTime(2022, 11, 23, 17, 2, 37, 745, DateTimeKind.Local).AddTicks(9160),
                            IsDeleted = false,
                            TypeId = 3,
                            TypeName = "TBB Kullanıcısı"
                        });
                });

            modelBuilder.Entity("Karartek.Entities.Concrete.Judgment", b =>
                {
                    b.HasOne("Karartek.Entities.Concrete.JudgmentType", "JudgmentType")
                        .WithMany("Judgments")
                        .HasForeignKey("JudgmentTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("JudgmentType");
                });

            modelBuilder.Entity("Karartek.Entities.Concrete.JudgmentPool", b =>
                {
                    b.HasOne("Karartek.Entities.Concrete.Judgment", "Judgment")
                        .WithMany("JudgmentPools")
                        .HasForeignKey("JudgmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Karartek.Entities.Concrete.LawyerJudgment", "LawyerJudgment")
                        .WithMany("JudgmentPools")
                        .HasForeignKey("LawyerJudgmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Karartek.Entities.Concrete.SearchType", "SearchType")
                        .WithMany("JudgmentPools")
                        .HasForeignKey("SearchTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Karartek.Entities.Concrete.User", "User")
                        .WithMany("JudgmentPools")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Judgment");

                    b.Navigation("LawyerJudgment");

                    b.Navigation("SearchType");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Karartek.Entities.Concrete.Lawyer", b =>
                {
                    b.HasOne("Karartek.Entities.Concrete.User", "User")
                        .WithOne("Lawyer")
                        .HasForeignKey("Karartek.Entities.Concrete.Lawyer", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Karartek.Entities.Concrete.LawyerJudgment", b =>
                {
                    b.HasOne("Karartek.Entities.Concrete.LawyerJudgmentState", "LawyerJudgmentState")
                        .WithMany("LawyerJudgments")
                        .HasForeignKey("StateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Karartek.Entities.Concrete.User", "User")
                        .WithMany("LawyerJudgments")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LawyerJudgmentState");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Karartek.Entities.Concrete.Student", b =>
                {
                    b.HasOne("Karartek.Entities.Concrete.User", "User")
                        .WithOne("Student")
                        .HasForeignKey("Karartek.Entities.Concrete.Student", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Karartek.Entities.Concrete.User", b =>
                {
                    b.HasOne("Karartek.Entities.Concrete.City_District", "City_District")
                        .WithMany("Users")
                        .HasForeignKey("City")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Karartek.Entities.Concrete.UserType", "UserType")
                        .WithMany("Users")
                        .HasForeignKey("UserTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City_District");

                    b.Navigation("UserType");
                });

            modelBuilder.Entity("Karartek.Entities.Concrete.City_District", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("Karartek.Entities.Concrete.Judgment", b =>
                {
                    b.Navigation("JudgmentPools");
                });

            modelBuilder.Entity("Karartek.Entities.Concrete.JudgmentType", b =>
                {
                    b.Navigation("Judgments");
                });

            modelBuilder.Entity("Karartek.Entities.Concrete.LawyerJudgment", b =>
                {
                    b.Navigation("JudgmentPools");
                });

            modelBuilder.Entity("Karartek.Entities.Concrete.LawyerJudgmentState", b =>
                {
                    b.Navigation("LawyerJudgments");
                });

            modelBuilder.Entity("Karartek.Entities.Concrete.SearchType", b =>
                {
                    b.Navigation("JudgmentPools");
                });

            modelBuilder.Entity("Karartek.Entities.Concrete.User", b =>
                {
                    b.Navigation("JudgmentPools");

                    b.Navigation("Lawyer");

                    b.Navigation("LawyerJudgments");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("Karartek.Entities.Concrete.UserType", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
